<?php

namespace Enius\Bitly\Test;

use Enius\Bitly\Bitly;
use Enius\Bitly\Provider\V3\Mapping\Link\Shorten;
use Enius\Bitly\Provider\V3\Mapping\User\Info;
use PHPUnit\Framework\TestCase;
use Symfony\Component\Dotenv\Dotenv;

class ClientV3Test extends TestCase
{

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $fileNameEnv = dirname(__DIR__).'/.env';
        if (file_exists($fileNameEnv)) {
            (new Dotenv())->load($fileNameEnv);
        }
    }

    /**
     * @testdox AccessTokenMissingException
     * @expectedException Enius\Bitly\Exceptions\AccessTokenMissingException
     *
     */
    public function testExceptionMissinToken()
    {
        Bitly::get(null)->v3();
    }

    /**
     * @testdox AccessTokenInvalidException
     * @expectedException Enius\Bitly\Exceptions\AccessTokenInvalidException
     *
     */
    public function testExceptionInvalidToken()
    {
        $client = Bitly::get('INVALID_TOKEN')->v3();
        $client->user()->info();
    }

    /**
     * @testdox Get Shorten
     */
    public function testShorten()
    {
        $client = Bitly::get(getenv('BITLY_ACCESS_TOKEN'))->v3();
        $shorten = $client->link()->shorten('https://www.google.com/');
        $this->assertInstanceOf(Shorten::class, $shorten);
    }

    /**
     * @testdox Get userInfo
     */
    public function testUserInfo()
    {
        $client = Bitly::get(getenv('BITLY_ACCESS_TOKEN'))->v3();
        $userInfo = $client->user()->info();
        $this->assertInstanceOf(Info::class, $userInfo);
    }
}